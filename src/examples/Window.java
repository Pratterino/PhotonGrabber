package examples;

import java.awt.Image;
import javax.swing.ImageIcon;

public class Window extends javax.swing.JFrame {
    
    public String FILEPATH     = "";
    public String SEARCHPATH   = "";
    public String SAVEPATH     = "";  
    
    private FileRead file;
    private FolderRead folder;
 
    
    private void initClass() {
         this.file      = new FileRead();
         this.folder    = new FolderRead(); 
    }
    
    /**
     * Creates new form ContactEditor
     */
    public Window() {
        initComponents();
        initClass();
        //isReady(); //Skips browsing now!        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        readFileLABEL = new javax.swing.JLabel();
        saveToLABEL = new javax.swing.JLabel();
        readFileINPUT = new javax.swing.JTextField();
        saveToINPUT = new javax.swing.JTextField();
        lookInLABEL = new javax.swing.JLabel();
        lookInINPUT = new javax.swing.JTextField();
        go_btn = new javax.swing.JButton();
        CONSOLE = new java.awt.TextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Photo(n) grabber");
        setBackground(new java.awt.Color(178, 213, 181));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImage(getIconImage());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Input"));

        readFileLABEL.setText("[READ] Kryptering/personnr:");

        saveToLABEL.setText("[SAVE] Save to dir:");

        readFileINPUT.setText("C:\\Users\\Paste\\Desktop\\krypt2014.txt");
        readFileINPUT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                readFileINPUTMouseReleased(evt);
            }
        });

        saveToINPUT.setText("C:\\Users\\Paste\\Desktop\\target");
        saveToINPUT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                saveToINPUTMouseReleased(evt);
            }
        });

        lookInLABEL.setText("[SEARCH] Search in dir:");

        lookInINPUT.setText("C:\\Users\\Paste\\Desktop\\Elevfoto");
        lookInINPUT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lookInINPUTMouseReleased(evt);
            }
        });
        lookInINPUT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lookInINPUTActionPerformed(evt);
            }
        });

        go_btn.setText("Do it!");
        go_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                go_btnActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(go_btn))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(29, 29, 29)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(lookInLABEL)
                            .add(readFileLABEL)
                            .add(saveToLABEL))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(saveToINPUT, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, lookInINPUT, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .add(readFileINPUT, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(readFileLABEL)
                    .add(readFileINPUT, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lookInLABEL)
                    .add(lookInINPUT, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(saveToINPUT, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(saveToLABEL))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(go_btn)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CONSOLE.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        CONSOLE.setEditable(false);
        CONSOLE.setFont(new java.awt.Font("Franklin Gothic Book", 0, 12)); // NOI18N
        CONSOLE.setName(""); // NOI18N
        CONSOLE.setText("Log:");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(CONSOLE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .add(jPanel1, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(CONSOLE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void go_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_go_btnActionPerformed
        startCopy();
    }//GEN-LAST:event_go_btnActionPerformed

    private void readFileINPUTMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_readFileINPUTMouseReleased
        browseFile();
    }//GEN-LAST:event_readFileINPUTMouseReleased

    private void lookInINPUTMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lookInINPUTMouseReleased
        browseFolder("SEARCH");
    }//GEN-LAST:event_lookInINPUTMouseReleased

    private void saveToINPUTMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveToINPUTMouseReleased
        browseFolder("SAVE");
    }//GEN-LAST:event_saveToINPUTMouseReleased

    private void lookInINPUTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lookInINPUTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lookInINPUTActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.LookAndFeelInfo[] installedLookAndFeels=javax.swing.UIManager.getInstalledLookAndFeels();
            for (int idx=0; idx<installedLookAndFeels.length; idx++)
                if ("Nimbus".equals(installedLookAndFeels[idx].getName())) {
                    javax.swing.UIManager.setLookAndFeel(installedLookAndFeels[idx].getClassName());
                    break;
                }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Window().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.TextArea CONSOLE;
    private javax.swing.JButton go_btn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField lookInINPUT;
    private javax.swing.JLabel lookInLABEL;
    private javax.swing.JTextField readFileINPUT;
    private javax.swing.JLabel readFileLABEL;
    private javax.swing.JTextField saveToINPUT;
    private javax.swing.JLabel saveToLABEL;
    // End of variables declaration//GEN-END:variables
    
    /**
     * Outputs a line to the window console.
     * 
     * @param line String to print.
     */
    public void setText(String line) {
        CONSOLE.append(line + "\n");
        System.out.println(line);
    }

    private void browseFile() {
        FILEPATH = file.browse();
        
        setText( "READ : " + FILEPATH );
        isReady();
    }

    private void browseFolder(String TYPE) {
        if (TYPE.equals("SAVE")) {
            SAVEPATH = folder.browse();
            saveToINPUT.setText(SAVEPATH);
            setText( TYPE + " : " + SAVEPATH );
        }
        
        else {
            SEARCHPATH = folder.browse();
            lookInINPUT.setText(SEARCHPATH);
            setText( TYPE + " : " + SEARCHPATH );
        }
        
        isReady();
    }
    
    private void isReady() {
        FILEPATH = readFileINPUT.getText();
        SAVEPATH = saveToINPUT.getText();
        SEARCHPATH = lookInINPUT.getText();
        
        boolean ready = ( !"".equals(SEARCHPATH) && !"".equals(FILEPATH) && !"".equals(SAVEPATH) );
        go_btn.setEnabled(ready);
    }

    private void startCopy() {
        setText(FILEPATH);
        setText(SAVEPATH);
        setText(SEARCHPATH);
        
        file.copy(SEARCHPATH, SAVEPATH);
    }
    
}
